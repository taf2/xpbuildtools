Lines starting with ||| are 'old' and probably wrong, 
but we keep them around in case um...
So just ignore them unless you're desperate.


--------------------------------------------
Setting up your build environment for win32:
--------------------------------------------


--------------------------------------- One-Time Setup

1. Download & Install cygwin from http://www.cygwin.com
		required packages:

		* bash
		* make
		* wget
and xargs, 
and lots of other stuff

2. Install MSVC .NET 2003 > we only need the C++ compiler
3. Follow the instructions at http://severna.homeip.net/cygwin.php to configure cygwin for msvc
	NOTE: after this step you should be able to execute cl.exe from cygwin

4. Download & Install http://tortoisesvn.tigris.org/ subversion client
This is a great SVN client you use thru Win Explorer.

* Download the mozilla debug runtime and firebird runtimes from
	http://updates.simosoftware.com/  follow the online instructions.
  Stick it into c:\projects\Xulrunner-dist.  

		copy these dll's into your debug-dist/bin directory
		* libIDL-0.6.dll(116K)
    * glib-2.0.dll(556K)
    * glib-1.2.dll(556K)
    * dirent.dll(6.5K)
    * debug-dist.tar.gz(75meg)
    * firebird.tar.bz2(3.5meg)

* To make the shipping installer, you need 'Inno Setup':
http://files.jrsoftware.org/is/5/isetup-5.1.9.exe
or just surf to jrsoftware.org and  wander around.  

* Fix up your command line so it's got what you need.  
Aliases don't work in scripts, so a lot of stuff needs to be put on your PATH.  
This is for  a Bash .profile file.  Yours will probably be different so think about it.
Cygwin docs: "You must have /usr/bin in your PATH before any Windows system directories. 
And you must not omit the Windows system directories!"

cdisk=/cygdrive/c
msvs="$cdisk/Program Files/Microsoft Visual Studio .NET 2003"

PATH="$cdisk/Documents and Settings/MyUserName/bin"  # for your personal scripts
PATH="$PATH:$cdisk/ruby/bin"   # must use Windows version of Ruby, not cygwin
PATH="$PATH:/usr/local/bin"    # standard unix
PATH="$PATH:/usr/emacs/bin"    # optional
PATH="$PATH:/usr/bin"          # standard unix
PATH="$PATH:/bin"              # standard unix
PATH="$PATH:/usr/X11R6/bin"    # optional
PATH="$PATH:$SIMO_DIR/tools"   # handy
PATH="$PATH:$SIMO_DIR/firebird/win32/bin"   # need for isql
PATH="$PATH:$cdisk/Program Files/Inno Setup 5"  # wherever you installed it

# all past here are mandatory
PATH="$PATH:$msvs/COMMON7/IDE"
PATH="$PATH:$msvs/VC7/BIN"
PATH="$PATH:$msvs/Common7/Tools"
PATH="$PATH:$msvs/Common7/Tools/bin/prerelease"
PATH="$PATH:$msvs/Common7/Tools/bin"
PATH="$PATH:$msvs/SDK/v1.1/bin"
PATH="$PATH:$cdisk/WINNT/Microsoft.NET/Framework/v1.1.4322"
PATH="$PATH:$cdisk/WINDOWS/system32"
PATH="$PATH:$cdisk/WINDOWS"
PATH="$PATH:$cdisk/WINDOWS/System32/Wbem"
export PATH

* Make sure to move aside the program /usr/bin/link if you got it with cygwin; 
		it's not that useful, I just renamed it to glink.
Or alternatively, do this adjusting for where you have it:
|||Create a symbolic link to the Microsoft linker 'link.exe':
|||		ln -s /c/Program\ Files/Microsoft\ Visual\ Studio\ .NET\ 2003/Vc7/bin/link.exe /usr/local/bin/link.exe


-------------------------------------- per-source-tree setup

5. Checkout https://updates.simosoftware.com/simosvn/simo2/ into a directory you'd like to develop in.
	NOTE: do not put spaces in this directory.  i.e. C:\Program Files\simo2 will not work
				We reccommend c:\projects\simo or  c:\projects\simo2.
A regular subversion 'checkout' is all you need to create the whole source tree.
Tortoise can do this - rightclick, 'svn checkout'.


* some of the newer scripts depend on these env vars.  
Add them to your .bashrc or  .profile or whatever, pointing to the right places:
export SIMO_DOS=c:\\Projects\\simo
export SIMO_TOP=/simo

* in the simo/config directory, make a file named 'user_win32.yml'.
Actually just go there  and copy and paste this into the shell:
+++++++++++++++++++++++++++
cat > user_win32.yml << EOF
debug:
  MOZDIST: "../Xulrunner-dist/"
  FIREBIRDDIST: "firebird/win32"
release:
  MOZDIST: "../Xulrunner-dist/"
  FIREBIRDDIST: "firebird/win32"
EOF
+++++++++++++++++++++++++++
You could put stuff in different places, but this'll work.
See also the 'user_win32.yml.example' file in same dir if you feel like experimenting.


* if start-simo.sh has DOS newlines, switch them to Unix.  How to tell:
  hexdump -n32 -C start-simo.sh 
00000000  23 21 2f 62 69 6e 2f 62  61 73 68 0d 0a 0d 0a 23  |#!/bin/bash....#|
00000010  73 65 74 20 2d 78 0d 0a  0d 0a 64 65 66 61 75 6c  |set -x....defaul|
00000020
Note first and second lines have 0d0a combination.

Fix this way:
  mv start-simo.sh  a
  cat a | tr -d '\r' > start-simo.sh
  chmod +x !$


-------------------------------------- Optional but Handy
* Some handy stuff to do with Cygwin (all optional)
   - this will make it easy to get to your simo directory from your home:
				% pwd
				/home/your_user_name
				% ln -s /cygdrive/c/projects/simo2
				% cd simo2
				 # Note your_user_name does not have spaces

		- this will shorten your pathnames:
				% cd /
				% mkdir /simo
				% mount 'c:\Projects\simo' /simo 
				% mkdir /Xulrunner-dist
				% mount 'c:\Projects\Xulrunner-dist' /Xulrunner-dist 
			cygwin will remember these 'mount' points next time you boot.
			Having both simo and Xulrunner-dist next to each other allows Make to work.

		- define aliases to jump around between different dirs.  
			You just have to remember them all.  Much faster than typing all the cd commands the long way.
				alias si='cd $SIMO_TOP'
				alias sicom='cd $SIMO_TOP/components'
				alias sifi='cd $SIMO_TOP/components/firebird'
				alias siidl='cd $SIMO_TOP/components/idl'
				alias sidb='cd $SIMO_TOP/components/db'

			and you can define these commands to jump between different source trees:
				alias si13='export SIMO_TOP=/simo13; export SIMO_DOS=c\\Projects\\simo13; cd $SIMO_TOP'
				alias si20='export SIMO_TOP=/simo20; export SIMO_DOS=c\\Projects\\simo20; cd $SIMO_TOP'
			but its easier to make bash source files, then define aliases like 
				alias si13='. ~/bin/simo13'


|||Build Tool Info [old]
|||---------------
|||
|||bootstrap.sh --> compiles build.exe and dep2.exe [huh?  no longer  there.]
|||
|||xpidl.exe --> glib-1.2.dll, libIDL-0.6.dll, gthread.dll, gmodule.dll
|||build.exe --> glib-2.0.dll, libxml-2.0.dll
|||dep2.exe	-->
|||
|||
|||simomozdist.tar.bz2 contains xpidl.exe and mozilla runtime
|||


----------------------------------------------------- Building, Rebuilding

* TO build the debugging binaries:
				% cd yoursimodir
				% ./boot.sh      # makes the makefiles & other stuff
				% make
	Results in the debug-simo dir.
to run: start-simo.sh


* To build 'release' versions:
				% cd yoursimodir
				% ./boot.sh release     # sets to release mode
				% make
	Results in the release-simo dir.  Its bin dir is effectively the installed program.

* Final step to wrap the release version into the installer (requires inno setup):
				% make setup            # builds the installer .exe file, output in simo/Output dir

* See also BuildSystem.html for some partially correct info 
on how the makefile generation works.






--------------------------------------------
Setting up a build environment in Linux (old):
--------------------------------------------

A stock fedora core 2 > system with development tools, gcc, python, autoconf, subversion, etc...


Firebird: 
	
	download 
	http://prdownloads.sourceforge.net/firebird/FirebirdCS-1.5.2.4731-0.i686.tar.gz?download

	tar -zxf FirebirdCS-1.5.2.4731-0.i686.tar.gz
	cd FirebirdCS-1.5.2.4731-0.i686/
	su
	./install.sh # set password to masterkey

Mozilla:

	use .mozconfig --
		
		export MOZ_PHOENIX=1
		mk_add_options MOZ_PHOENIX=1

		ac_add_options --disable-ldap
		ac_add_options --disable-mailnews
		ac_add_options --enable-extensions=cookie,xml-rpc,xmlextras,pref,transformiix,universalchardet,webservices,inspector,gnomevfs,negotiateauth
		ac_add_options --enable-crypto
		ac_add_options --disable-composer
		ac_add_options --enable-single-profile
		ac_add_options --disable-profilesharing
		ac_add_options --disable-logging

		ac_add_options --disable-composer
		ac_add_options --disable-installer
		ac_add_options --disable-ldap
		ac_add_options --disable-mailnews
		ac_add_options --disable-tests

		# Debug options
		ac_add_options --enable-debug
		ac_add_options --disable-optimize

		ac_add_options --enable-default-toolkit=gtk2
		ac_add_options --enable-xft
		ac_add_options --disable-freetype2

	apply the SimoHealth patches under simo2/firefox/simo.patch


---------------------------------------------
Setting up a build environment on the Mac OSX (old):
----------------------------------------------

1. install xcode 2.1 - make sure you choose the default install path or mozilla will fail to compile
2. install MacOSX10.3.9.sdk
3. install fink, http://fink.sourceforge.net/
4. Download Firebird Framework: http://prdownloads.sourceforge.net/firebird/Firebird-CS-1.5.1-MacOS.zip?download
5. Download Firefox tar ball: http://ftp.mozilla.org/pub/mozilla.org/firefox/releases/1.0.6/source/
6. Apply patchs https://bugzilla.mozilla.org/attachment.cgi?id=185940 and simo2/firefox/simo.patch
7. sudo gcc_select 3.3
8. sudo apt-get install autoconf
9. cd mozilla
10. make -f client.mk distclean && autoconf && make -f client.mk build
11. sudo apt-get install autoconf2.5
12. cd simo2
13. ./mk.py -x /path/to/mozilla/dist -d /Library/Frameworks/Firebird.framework/
14. make
15. ./start-simo.sh

To view console output mac has a console app under /Applications/Utitlities/Console.app

The .mozconfig used:
. $topsrcdir/browser/config/mozconfig

ac_add_options --disable-tests
ac_add_options --enable-debug
ac_add_options --disable-optimize

ac_add_options --without-system-nspr
ac_add_options --without-system-zlib
ac_add_options --without-system-jpeg
ac_add_options --without-system-png
ac_add_options --without-system-mng
ac_add_options --with-macos-sdk=/Developer/SDKs/MacOSX10.3.9.sdk 

---------------
Get the Source:
---------------

svn co https://updates.simosoftware.com/simosvn/simo2

cd simo2

	./boot.sh
	make
	./start-simo.sh

--------------------------
Building different brands:
--------------------------
./boot.sh <mode> <brand>
where mode = debug or release
make

To generate setup.exe, make setup.

Example:
./boot.sh release membership
make
make setup

--------------------------------------------
Windows Registry Keys Installed
--------------------------------------------

The installer sets these windows keys.  For more accurate info, consult config/simo.iss.in,
and/or run regedit.exe.

----------------------- HKCR  Classes Root

For the most part we stick data into SimoHealthData off of the root.
Also there's one .sbx and one SimoHealthVersion node.  

SimoHealthVersion - Version, data is version number
	specifies most recent version installed; one entry only, never removed.
	I'm not sure if this does anything anymore but the installer installs it.

.sbx - "SimoHealthData"
	The file suffix; one entry only, never removed
	That apparently points to the SimoHealthData entry and the next few 
	entries here.  Interesting experiment: try the url "SimoHealthData:".

SimoHealthData
SimoHealthData\DefaultIcon
SimoHealthData\shell\open\command
	set up SimoHealth as handler for SimoHealthData application (pointed to 
	by .sbx suffix) and also specify what's the app icon.
	These are by MS standard.  

SimoHealthData\AppPath - app pathname
SimoHealthData\DBPath - database file pathname (new in 2.0)
SimoHealthData\SMGroup - start menu group (new in 2.0)
	These have one data value per installation.  The name of the value is always the 
	installation pathname.  For AppPath, the value is supposed to be the UUID but 
	a build bug caused 121 and some other versions to say "release".  Not sure if 
	it's a big deal.  When an installation is uninstalled, the data is set to "", 
	not sure why it isn't deleted.  But the installer uses that to figure out what 
	installations are installed.  The DBPath and SMGroup are each basically lookup 
	tables: given the name  which is the installation app path, the value is the 
	full pathname to the corresponding database file, or the Start Menu group 
	underneath "Programs" in AllUsers, including backslashes if the user entered a sub-level.


-------------------------------- HKCU - current user

Software\Microsoft\Windows\CurrentVersion\Explorer\MenuOrder\Start Menu2\Programs\SimoHealth\
	start menu sorting stuff.  Note this was misspelled "StartMenu2" without the space before simo v2

Software\Microsoft\Windows\ShellNoRoam\MUICache\";
	um... I think this resets a cache of some sort.  

